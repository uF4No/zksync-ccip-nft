{
  "version": "3.4",
  "log": [
    {
      "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:IAny2EVMMessageReceiver": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ccipReceive((bytes32,uint64,bytes,bytes,struct Client.EVMTokenAmount[]))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol:IRouterClient": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isChainSupported(uint64)",
          "getFee(uint64,(bytes,bytes,struct Client.EVMTokenAmount[],address,bytes))",
          "ccipSend(uint64,(bytes,bytes,struct Client.EVMTokenAmount[],address,bytes))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol:Client": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol:5",
        "version": {
          "withMetadata": "5da17fd9644ccd5f49a7bb01c89eae78cc1fee465e152dd17ac10cd6371ed84a",
          "withoutMetadata": "5da17fd9644ccd5f49a7bb01c89eae78cc1fee465e152dd17ac10cd6371ed84a",
          "linkedWithoutMetadata": "5da17fd9644ccd5f49a7bb01c89eae78cc1fee465e152dd17ac10cd6371ed84a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner": {
        "src": "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol:8",
        "version": {
          "withMetadata": "e03289db22e9e6f309a48a06b1e54fb005fc95caa79f18f30b5d931806419b36",
          "withoutMetadata": "e03289db22e9e6f309a48a06b1e54fb005fc95caa79f18f30b5d931806419b36",
          "linkedWithoutMetadata": "e03289db22e9e6f309a48a06b1e54fb005fc95caa79f18f30b5d931806419b36"
        },
        "inherit": [
          "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol:IOwnable"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwner",
            "src": "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol:9"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal": {
        "src": "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:8",
        "version": {
          "withMetadata": "a94c0b6d216de91661b3bdff06b2b8e2a89748f7a70e23e60513b290bbd38c90",
          "withoutMetadata": "a94c0b6d216de91661b3bdff06b2b8e2a89748f7a70e23e60513b290bbd38c90",
          "linkedWithoutMetadata": "a94c0b6d216de91661b3bdff06b2b8e2a89748f7a70e23e60513b290bbd38c90"
        },
        "inherit": [
          "@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol:IOwnable"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwnerWithProposal",
            "src": "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ConfirmedOwnerWithProposal",
              "label": "s_owner",
              "type": "t_address",
              "src": "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:9"
            },
            {
              "contract": "ConfirmedOwnerWithProposal",
              "label": "s_pendingOwner",
              "type": "t_address",
              "src": "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol:OwnerIsCreator": {
        "src": "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol:8",
        "version": {
          "withMetadata": "761698dcbf805f9268f29e4f55135e03424e4960a4800f5de107702fcda52fa7",
          "withoutMetadata": "761698dcbf805f9268f29e4f55135e03424e4960a4800f5de107702fcda52fa7",
          "linkedWithoutMetadata": "761698dcbf805f9268f29e4f55135e03424e4960a4800f5de107702fcda52fa7"
        },
        "inherit": [
          "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol:IOwnable"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OwnerIsCreator",
            "src": "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol:9"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol:IOwnable": {
        "src": "@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol:LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906": {
        "src": "@openzeppelin/contracts/interfaces/IERC4906.sol:10",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "f2d6517598d6257b8fa73e06ad0d4747d0e2d8f30bca024321b90192f83bb923",
          "withoutMetadata": "f2d6517598d6257b8fa73e06ad0d4747d0e2d8f30bca024321b90192f83bb923",
          "linkedWithoutMetadata": "f2d6517598d6257b8fa73e06ad0d4747d0e2d8f30bca024321b90192f83bb923"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:23"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:26"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:28"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:32"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:34"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721URIStorage",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:22"
            }
          ],
          "types": {
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils": {
        "src": "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:16",
        "version": {
          "withMetadata": "0affff9089c24cc4118a5d23e45e4bc4014700f3139743ca2a2aed894df04be7",
          "withoutMetadata": "0affff9089c24cc4118a5d23e45e4bc4014700f3139743ca2a2aed894df04be7",
          "linkedWithoutMetadata": "0affff9089c24cc4118a5d23e45e4bc4014700f3139743ca2a2aed894df04be7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Base64.sol:Base64": {
        "src": "@openzeppelin/contracts/utils/Base64.sol:9",
        "version": {
          "withMetadata": "96e4a31959586f675898dd3a7761a6cd1273ab8423cb15d32abf34f2aa23ef9e",
          "withoutMetadata": "96e4a31959586f675898dd3a7761a6cd1273ab8423cb15d32abf34f2aa23ef9e",
          "linkedWithoutMetadata": "96e4a31959586f675898dd3a7761a6cd1273ab8423cb15d32abf34f2aa23ef9e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Panic.sol:Panic": {
        "src": "@openzeppelin/contracts/utils/Panic.sol:26",
        "version": {
          "withMetadata": "d541da85340dcdd8b25534c8f6ae19056d9702643fef7d955744e362e80859e5",
          "withoutMetadata": "d541da85340dcdd8b25534c8f6ae19056d9702643fef7d955744e362e80859e5",
          "linkedWithoutMetadata": "d541da85340dcdd8b25534c8f6ae19056d9702643fef7d955744e362e80859e5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:13",
        "version": {
          "withMetadata": "83126ec17b9e2e6b2e105e8a5586aec1c5e1dba5de67bbfddd43df77cfcbd054",
          "withoutMetadata": "83126ec17b9e2e6b2e105e8a5586aec1c5e1dba5de67bbfddd43df77cfcbd054",
          "linkedWithoutMetadata": "83126ec17b9e2e6b2e105e8a5586aec1c5e1dba5de67bbfddd43df77cfcbd054"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:12",
        "version": {
          "withMetadata": "e69566e26d0e071c6ee5fe217ba7298efb877c9c5994eb735a8fbf67d778f2de",
          "withoutMetadata": "e69566e26d0e071c6ee5fe217ba7298efb877c9c5994eb735a8fbf67d778f2de",
          "linkedWithoutMetadata": "e69566e26d0e071c6ee5fe217ba7298efb877c9c5994eb735a8fbf67d778f2de"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast": {
        "src": "@openzeppelin/contracts/utils/math/SafeCast.sol:19",
        "version": {
          "withMetadata": "aec2eaf9f10fbe2533e54c6d8cda31d682bb0a116ef2059ce0b4c4327af1af7d",
          "withoutMetadata": "aec2eaf9f10fbe2533e54c6d8cda31d682bb0a116ef2059ce0b4c4327af1af7d",
          "linkedWithoutMetadata": "aec2eaf9f10fbe2533e54c6d8cda31d682bb0a116ef2059ce0b4c4327af1af7d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:11",
        "version": {
          "withMetadata": "569ff06815223c2cf76de3799a4bcefeca3d92cf26d76e5fcc8241c76ac09f58",
          "withoutMetadata": "569ff06815223c2cf76de3799a4bcefeca3d92cf26d76e5fcc8241c76ac09f58",
          "linkedWithoutMetadata": "569ff06815223c2cf76de3799a4bcefeca3d92cf26d76e5fcc8241c76ac09f58"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/XNFT.sol:XNFT": {
        "src": "contracts/XNFT.sol:22",
        "version": {
          "withMetadata": "d27d199e0e4eac658191a21a49058d770000d31dc2f731c1d83e8c518fbb54ea",
          "withoutMetadata": "d27d199e0e4eac658191a21a49058d770000d31dc2f731c1d83e8c518fbb54ea",
          "linkedWithoutMetadata": "d27d199e0e4eac658191a21a49058d770000d31dc2f731c1d83e8c518fbb54ea"
        },
        "inherit": [
          "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol:OwnerIsCreator",
          "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts-ccip/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts-ccip/src/v0.8/shared/interfaces/IOwnable.sol:IOwnable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:IAny2EVMMessageReceiver",
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,uint64)",
          "mint()",
          "enableChain(uint64,address,bytes)",
          "disableChain(uint64)",
          "crossChainTransferFrom(address,address,uint256,uint64,uint8)",
          "ccipReceive((bytes32,uint64,bytes,bytes,struct Client.EVMTokenAmount[]))",
          "withdraw(address)",
          "withdrawToken(address,address)",
          "tokenURI(uint256)",
          "getCCIPRouter()",
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "XNFT",
            "src": "contracts/XNFT.sol:128"
          },
          {
            "kind": "state-variable-assignment",
            "name": "characters",
            "src": "contracts/XNFT.sol:56"
          },
          {
            "kind": "state-variable-immutable",
            "name": "i_ccipRouter",
            "src": "contracts/XNFT.sol:63"
          },
          {
            "kind": "state-variable-immutable",
            "name": "i_linkToken",
            "src": "contracts/XNFT.sol:64"
          },
          {
            "kind": "state-variable-immutable",
            "name": "i_currentChainSelector",
            "src": "contracts/XNFT.sol:65"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "XNFT",
              "label": "characters",
              "type": "t_array(t_string_storage)dyn_storage",
              "src": "contracts/XNFT.sol:56"
            },
            {
              "contract": "XNFT",
              "label": "_nextTokenId",
              "type": "t_uint256",
              "src": "contracts/XNFT.sol:67"
            },
            {
              "contract": "XNFT",
              "label": "s_chains",
              "type": "t_mapping(t_uint64,t_struct(XNftDetails)7622_storage)",
              "src": "contracts/XNFT.sol:69"
            }
          ],
          "types": {
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint64,t_struct(XNftDetails)7622_storage)": {
              "label": "mapping(uint64 => struct XNFT.XNftDetails)"
            },
            "t_uint64": {
              "label": "uint64"
            },
            "t_struct(XNftDetails)7622_storage": {
              "label": "struct XNFT.XNftDetails",
              "members": [
                {
                  "label": "xNftAddress",
                  "type": "t_address"
                },
                {
                  "label": "ccipExtraArgsBytes",
                  "type": "t_bytes_storage"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes_storage": {
              "label": "bytes"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    }
  ]
}